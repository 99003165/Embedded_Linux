cscope 15 $HOME/EmbeddedLinux/Drivers               0000018499
	@driver1.c

1 
	~<löux/fs.h
>

2 
	~<löux/moduÀ.h
>

3 
	~<löux/kî√l.h
>

5 
dev_t
 
	gpdevid
;

6 
	gndevi˚s
=1;

8 
__öô
 
	$p£udo_öô
()

10 
ªt
;

11 
ªt
 = 
	`Æloc_chrdev_ªgi⁄
(&
pdevid
, 0, 
ndevi˚s
, "pseudo_sample");

12 if(
ªt
)

14 
	`¥ötk
("Pseudo: FailedÅoÑegister Driver\n");

15  -
EINVAL
;

17 
	`¥ötk
("Suc˚ssfuŒyÑegi°îed, maj‹ = %d, mö‹ = %d\n", 
	`MAJOR
(
pdevid
), 
	`MINOR
(pdevid));

18 
	`¥ötk
("Pseudo Driver Sample.. Welcome\n");

20 
	}
}

22 
__exô
 
	$p£udo_exô
()

24 
	`uƒegi°î_chrdev_ªgi⁄
(
pdevid
, 
ndevi˚s
);

25 
	`¥ötk
("Pseudo Driver Sample.. Bye\n");

26 
	}
}

28 
moduÀ_öô
(
p£udo_öô
);

29 
moduÀ_exô
(
p£udo_exô
);

	@driver1.mod.c

1 
	~<löux/moduÀ.h
>

2 
	#INCLUDE_VERMAGIC


	)

3 
	~<löux/buûd-ß….h
>

4 
	~<löux/vîmagic.h
>

5 
	~<löux/compûî.h
>

7 
	gBUILD_SALT
;

9 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

10 
MODULE_INFO
(
«me
, 
KBUILD_MODNAME
);

12 
__visibÀ
 
moduÀ
 
__this_moduÀ


13 
__£˘i⁄
(.
gnu
.
lök⁄˚
.
this_moduÀ
) = {

14 .
«me
 = 
KBUILD_MODNAME
,

15 .
	göô
 = 
öô_moduÀ
,

16 #ifde‡
CONFIG_MODULE_UNLOAD


17 .
	gexô
 = 
˛ónup_moduÀ
,

19 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

22 #ifde‡
CONFIG_RETPOLINE


23 
MODULE_INFO
(
ªçﬁöe
, "Y");

26 
MODULE_INFO
(
dïíds
, "");

29 
MODULE_INFO
(
§cvîsi⁄
, "12A72929E2914E199B459EA");

	@/usr/include/linux/fs.h

2 #i‚de‡
_LINUX_FS_H


3 
	#_LINUX_FS_H


	)

13 
	~<löux/limôs.h
>

14 
	~<löux/io˘l.h
>

15 
	~<löux/ty≥s.h
>

16 
	~<löux/fs¸y±.h
>

19 
	~<löux/mou¡.h
>

32 #unde‡
NR_OPEN


33 
	#INR_OPEN_CUR
 1024

	)

34 
	#INR_OPEN_MAX
 4096

	)

36 
	#BLOCK_SIZE_BITS
 10

	)

37 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

39 
	#SEEK_SET
 0

	)

40 
	#SEEK_CUR
 1

	)

41 
	#SEEK_END
 2

	)

42 
	#SEEK_DATA
 3

	)

43 
	#SEEK_HOLE
 4

	)

44 
	#SEEK_MAX
 
SEEK_HOLE


	)

46 
	#RENAME_NOREPLACE
 (1 << 0Ë

	)

47 
	#RENAME_EXCHANGE
 (1 << 1Ë

	)

48 
	#RENAME_WHITEOUT
 (1 << 2Ë

	)

50 
	sfûe_˛⁄e_ønge
 {

51 
__s64
 
	m§c_fd
;

52 
__u64
 
	m§c_off£t
;

53 
__u64
 
	m§c_Àngth
;

54 
__u64
 
	mde°_off£t
;

57 
	sf°rim_ønge
 {

58 
__u64
 
	m°¨t
;

59 
__u64
 
	mÀn
;

60 
__u64
 
	mmöÀn
;

64 
	#FILE_DEDUPE_RANGE_SAME
 0

	)

65 
	#FILE_DEDUPE_RANGE_DIFFERS
 1

	)

68 
	sfûe_dedu≥_ønge_öfo
 {

69 
__s64
 
	mde°_fd
;

70 
__u64
 
	mde°_off£t
;

71 
__u64
 
	mbyãs_dedu≥d
;

78 
__s32
 
	m°©us
;

79 
__u32
 
	mª£rved
;

83 
	sfûe_dedu≥_ønge
 {

84 
__u64
 
	m§c_off£t
;

85 
__u64
 
	m§c_Àngth
;

86 
__u16
 
	mde°_cou¡
;

87 
__u16
 
	mª£rved1
;

88 
__u32
 
	mª£rved2
;

89 
fûe_dedu≥_ønge_öfo
 
	möfo
[0];

93 
	sfûes_°©_°ru˘
 {

94 
	mƒ_fûes
;

95 
	mƒ_‰ì_fûes
;

96 
	mmax_fûes
;

99 
	söodes_°©_t
 {

100 
	mƒ_öodes
;

101 
	mƒ_unu£d
;

102 
	mdummy
[5];

106 
	#NR_FILE
 8192

	)

111 
	sfsx©å
 {

112 
__u32
 
	mfsx_xÊags
;

113 
__u32
 
	mfsx_extsize
;

114 
__u32
 
	mfsx_√xã¡s
;

115 
__u32
 
	mfsx_¥ojid
;

116 
__u32
 
	mfsx_cowextsize
;

117 
	mfsx_∑d
[8];

123 
	#FS_XFLAG_REALTIME
 0x00000001

	)

124 
	#FS_XFLAG_PREALLOC
 0x00000002

	)

125 
	#FS_XFLAG_IMMUTABLE
 0x00000008

	)

126 
	#FS_XFLAG_APPEND
 0x00000010

	)

127 
	#FS_XFLAG_SYNC
 0x00000020

	)

128 
	#FS_XFLAG_NOATIME
 0x00000040

	)

129 
	#FS_XFLAG_NODUMP
 0x00000080

	)

130 
	#FS_XFLAG_RTINHERIT
 0x00000100

	)

131 
	#FS_XFLAG_PROJINHERIT
 0x00000200

	)

132 
	#FS_XFLAG_NOSYMLINKS
 0x00000400

	)

133 
	#FS_XFLAG_EXTSIZE
 0x00000800

	)

134 
	#FS_XFLAG_EXTSZINHERIT
 0x00001000

	)

135 
	#FS_XFLAG_NODEFRAG
 0x00002000

	)

136 
	#FS_XFLAG_FILESTREAM
 0x00004000

	)

137 
	#FS_XFLAG_DAX
 0x00008000

	)

138 
	#FS_XFLAG_COWEXTSIZE
 0x00010000

	)

139 
	#FS_XFLAG_HASATTR
 0x80000000

	)

144 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

145 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

146 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

147 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

148 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

149 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

150 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

151 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

152 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

153 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

154 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

155 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

157 
	#BLKPG
 
	`_IO
(0x12,105)

	)

161 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

162 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

167 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

168 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

169 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

170 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

171 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

172 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

173 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

174 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

175 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

176 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

177 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

178 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

179 
	#BLKDISCARDZEROES
 
	`_IO
(0x12,124)

	)

180 
	#BLKSECDISCARD
 
	`_IO
(0x12,125)

	)

181 
	#BLKROTATIONAL
 
	`_IO
(0x12,126)

	)

182 
	#BLKZEROOUT
 
	`_IO
(0x12,127)

	)

188 
	#BMAP_IOCTL
 1

	)

189 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

190 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

191 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

192 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

193 
	#FITRIM
 
	`_IOWR
('X', 121, 
f°rim_ønge
Ë

	)

194 
	#FICLONE
 
	`_IOW
(0x94, 9, )

	)

195 
	#FICLONERANGE
 
	`_IOW
(0x94, 13, 
fûe_˛⁄e_ønge
)

	)

196 
	#FIDEDUPERANGE
 
	`_IOWR
(0x94, 54, 
fûe_dedu≥_ønge
)

	)

198 
	#FSLABEL_MAX
 256

	)

200 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

201 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

202 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

203 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

204 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

205 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

206 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

207 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

208 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

209 
	#FS_IOC_FSGETXATTR
 
	`_IOR
('X', 31, 
fsx©å
)

	)

210 
	#FS_IOC_FSSETXATTR
 
	`_IOW
('X', 32, 
fsx©å
)

	)

211 
	#FS_IOC_GETFSLABEL
 
	`_IOR
(0x94, 49, [
FSLABEL_MAX
])

	)

212 
	#FS_IOC_SETFSLABEL
 
	`_IOW
(0x94, 50, [
FSLABEL_MAX
])

	)

234 
	#FS_SECRM_FL
 0x00000001

	)

235 
	#FS_UNRM_FL
 0x00000002

	)

236 
	#FS_COMPR_FL
 0x00000004

	)

237 
	#FS_SYNC_FL
 0x00000008

	)

238 
	#FS_IMMUTABLE_FL
 0x00000010

	)

239 
	#FS_APPEND_FL
 0x00000020

	)

240 
	#FS_NODUMP_FL
 0x00000040

	)

241 
	#FS_NOATIME_FL
 0x00000080

	)

243 
	#FS_DIRTY_FL
 0x00000100

	)

244 
	#FS_COMPRBLK_FL
 0x00000200

	)

245 
	#FS_NOCOMP_FL
 0x00000400

	)

247 
	#FS_ENCRYPT_FL
 0x00000800

	)

248 
	#FS_BTREE_FL
 0x00001000

	)

249 
	#FS_INDEX_FL
 0x00001000

	)

250 
	#FS_IMAGIC_FL
 0x00002000

	)

251 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

252 
	#FS_NOTAIL_FL
 0x00008000

	)

253 
	#FS_DIRSYNC_FL
 0x00010000

	)

254 
	#FS_TOPDIR_FL
 0x00020000

	)

255 
	#FS_HUGE_FILE_FL
 0x00040000

	)

256 
	#FS_EXTENT_FL
 0x00080000

	)

257 
	#FS_VERITY_FL
 0x00100000

	)

258 
	#FS_EA_INODE_FL
 0x00200000

	)

259 
	#FS_EOFBLOCKS_FL
 0x00400000

	)

260 
	#FS_NOCOW_FL
 0x00800000

	)

261 
	#FS_INLINE_DATA_FL
 0x10000000

	)

262 
	#FS_PROJINHERIT_FL
 0x20000000

	)

263 
	#FS_CASEFOLD_FL
 0x40000000

	)

264 
	#FS_RESERVED_FL
 0x80000000

	)

266 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

267 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

270 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

271 
	#SYNC_FILE_RANGE_WRITE
 2

	)

272 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

273 
	#SYNC_FILE_RANGE_WRITE_AND_WAIT
 (
SYNC_FILE_RANGE_WRITE
 | \

274 
SYNC_FILE_RANGE_WAIT_BEFORE
 | \

275 
SYNC_FILE_RANGE_WAIT_AFTER
)

	)

281 
	t__bôwi£
 
	t__kî√l_rwf_t
;

284 
	#RWF_HIPRI
 ((
__kî√l_rwf_t
)0x00000001)

	)

287 
	#RWF_DSYNC
 ((
__kî√l_rwf_t
)0x00000002)

	)

290 
	#RWF_SYNC
 ((
__kî√l_rwf_t
)0x00000004)

	)

293 
	#RWF_NOWAIT
 ((
__kî√l_rwf_t
)0x00000008)

	)

296 
	#RWF_APPEND
 ((
__kî√l_rwf_t
)0x00000010)

	)

299 
	#RWF_SUPPORTED
 (
RWF_HIPRI
 | 
RWF_DSYNC
 | 
RWF_SYNC
 | 
RWF_NOWAIT
 |\

300 
RWF_APPEND
)

	)

	@/usr/include/linux/kernel.h

2 #i‚de‡
_LINUX_KERNEL_H


3 
	#_LINUX_KERNEL_H


	)

5 
	~<löux/sysöfo.h
>

10 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

11 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

13 
	#__KERNEL_DIV_ROUND_UP
(
n
, 
d
Ë((“Ë+ (dË- 1Ë/ (d))

	)

	@/usr/include/linux/module.h

2 #i‚de‡
_LINUX_MODULE_H


3 
	#_LINUX_MODULE_H


	)

6 
	#MODULE_INIT_IGNORE_MODVERSIONS
 1

	)

7 
	#MODULE_INIT_IGNORE_VERMAGIC
 2

	)

	@/usr/include/linux/fscrypt.h

8 #i‚de‡
_LINUX_FSCRYPT_H


9 
	#_LINUX_FSCRYPT_H


	)

11 
	~<löux/ty≥s.h
>

14 
	#FSCRYPT_POLICY_FLAGS_PAD_4
 0x00

	)

15 
	#FSCRYPT_POLICY_FLAGS_PAD_8
 0x01

	)

16 
	#FSCRYPT_POLICY_FLAGS_PAD_16
 0x02

	)

17 
	#FSCRYPT_POLICY_FLAGS_PAD_32
 0x03

	)

18 
	#FSCRYPT_POLICY_FLAGS_PAD_MASK
 0x03

	)

19 
	#FSCRYPT_POLICY_FLAG_DIRECT_KEY
 0x04

	)

20 
	#FSCRYPT_POLICY_FLAGS_VALID
 0x07

	)

23 
	#FSCRYPT_MODE_AES_256_XTS
 1

	)

24 
	#FSCRYPT_MODE_AES_256_CTS
 4

	)

25 
	#FSCRYPT_MODE_AES_128_CBC
 5

	)

26 
	#FSCRYPT_MODE_AES_128_CTS
 6

	)

27 
	#FSCRYPT_MODE_ADIANTUM
 9

	)

28 
	#__FSCRYPT_MODE_MAX
 9

	)

36 
	#FSCRYPT_POLICY_V1
 0

	)

37 
	#FSCRYPT_KEY_DESCRIPTOR_SIZE
 8

	)

38 
	sfs¸y±_pﬁicy_v1
 {

39 
__u8
 
	mvîsi⁄
;

40 
__u8
 
	mc⁄ã¡s_í¸y±i⁄_mode
;

41 
__u8
 
	mfûíames_í¸y±i⁄_mode
;

42 
__u8
 
	mÊags
;

43 
__u8
 
	mma°î_key_des¸ùt‹
[
FSCRYPT_KEY_DESCRIPTOR_SIZE
];

45 
	#fs¸y±_pﬁicy
 
fs¸y±_pﬁicy_v1


	)

51 
	#FSCRYPT_KEY_DESC_PREFIX
 "fs¸y±:"

	)

52 
	#FSCRYPT_KEY_DESC_PREFIX_SIZE
 8

	)

53 
	#FSCRYPT_MAX_KEY_SIZE
 64

	)

54 
	sfs¸y±_key
 {

55 
__u32
 
	mmode
;

56 
__u8
 
	møw
[
FSCRYPT_MAX_KEY_SIZE
];

57 
__u32
 
	msize
;

63 
	#FSCRYPT_POLICY_V2
 2

	)

64 
	#FSCRYPT_KEY_IDENTIFIER_SIZE
 16

	)

65 
	sfs¸y±_pﬁicy_v2
 {

66 
__u8
 
	mvîsi⁄
;

67 
__u8
 
	mc⁄ã¡s_í¸y±i⁄_mode
;

68 
__u8
 
	mfûíames_í¸y±i⁄_mode
;

69 
__u8
 
	mÊags
;

70 
__u8
 
	m__ª£rved
[4];

71 
__u8
 
	mma°î_key_idítifõr
[
FSCRYPT_KEY_IDENTIFIER_SIZE
];

75 
	sfs¸y±_gë_pﬁicy_ex_¨g
 {

76 
__u64
 
	mpﬁicy_size
;

78 
__u8
 
	mvîsi⁄
;

79 
fs¸y±_pﬁicy_v1
 
	mv1
;

80 
fs¸y±_pﬁicy_v2
 
	mv2
;

81 } 
	mpﬁicy
;

88 
	#FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR
 1

	)

95 
	#FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER
 2

	)

101 
	sfs¸y±_key_•ecifõr
 {

102 
__u32
 
	mty≥
;

103 
__u32
 
	m__ª£rved
;

105 
__u8
 
	m__ª£rved
[32];

106 
__u8
 
	mdes¸ùt‹
[
FSCRYPT_KEY_DESCRIPTOR_SIZE
];

107 
__u8
 
	midítifõr
[
FSCRYPT_KEY_IDENTIFIER_SIZE
];

108 } 
	mu
;

112 
	sfs¸y±_add_key_¨g
 {

113 
fs¸y±_key_•ecifõr
 
	mkey_•ec
;

114 
__u32
 
	møw_size
;

115 
__u32
 
	m__ª£rved
[9];

116 
__u8
 
	møw
[];

120 
	sfs¸y±_ªmove_key_¨g
 {

121 
fs¸y±_key_•ecifõr
 
	mkey_•ec
;

122 
	#FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY
 0x00000001

	)

123 
	#FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS
 0x00000002

	)

124 
__u32
 
	mªmovÆ_°©us_Êags
;

125 
__u32
 
	m__ª£rved
[5];

129 
	sfs¸y±_gë_key_°©us_¨g
 {

131 
fs¸y±_key_•ecifõr
 
	mkey_•ec
;

132 
__u32
 
	m__ª£rved
[6];

135 
	#FSCRYPT_KEY_STATUS_ABSENT
 1

	)

136 
	#FSCRYPT_KEY_STATUS_PRESENT
 2

	)

137 
	#FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED
 3

	)

138 
__u32
 
	m°©us
;

139 
	#FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF
 0x00000001

	)

140 
__u32
 
	m°©us_Êags
;

141 
__u32
 
	mu£r_cou¡
;

142 
__u32
 
	m__out_ª£rved
[13];

145 
	#FS_IOC_SET_ENCRYPTION_POLICY
 
	`_IOR
('f', 19, 
fs¸y±_pﬁicy
)

	)

146 
	#FS_IOC_GET_ENCRYPTION_PWSALT
 
	`_IOW
('f', 20, 
__u8
[16])

	)

147 
	#FS_IOC_GET_ENCRYPTION_POLICY
 
	`_IOW
('f', 21, 
fs¸y±_pﬁicy
)

	)

148 
	#FS_IOC_GET_ENCRYPTION_POLICY_EX
 
	`_IOWR
('f', 22, 
__u8
[9]Ë

	)

149 
	#FS_IOC_ADD_ENCRYPTION_KEY
 
	`_IOWR
('f', 23, 
fs¸y±_add_key_¨g
)

	)

150 
	#FS_IOC_REMOVE_ENCRYPTION_KEY
 
	`_IOWR
('f', 24, 
fs¸y±_ªmove_key_¨g
)

	)

151 
	#FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS
 
	`_IOWR
('f', 25, 
fs¸y±_ªmove_key_¨g
)

	)

152 
	#FS_IOC_GET_ENCRYPTION_KEY_STATUS
 
	`_IOWR
('f', 26, 
fs¸y±_gë_key_°©us_¨g
)

	)

157 
	#FS_KEY_DESCRIPTOR_SIZE
 
FSCRYPT_KEY_DESCRIPTOR_SIZE


	)

158 
	#FS_POLICY_FLAGS_PAD_4
 
FSCRYPT_POLICY_FLAGS_PAD_4


	)

159 
	#FS_POLICY_FLAGS_PAD_8
 
FSCRYPT_POLICY_FLAGS_PAD_8


	)

160 
	#FS_POLICY_FLAGS_PAD_16
 
FSCRYPT_POLICY_FLAGS_PAD_16


	)

161 
	#FS_POLICY_FLAGS_PAD_32
 
FSCRYPT_POLICY_FLAGS_PAD_32


	)

162 
	#FS_POLICY_FLAGS_PAD_MASK
 
FSCRYPT_POLICY_FLAGS_PAD_MASK


	)

163 
	#FS_POLICY_FLAG_DIRECT_KEY
 
FSCRYPT_POLICY_FLAG_DIRECT_KEY


	)

164 
	#FS_POLICY_FLAGS_VALID
 
FSCRYPT_POLICY_FLAGS_VALID


	)

165 
	#FS_ENCRYPTION_MODE_INVALID
 0

	)

166 
	#FS_ENCRYPTION_MODE_AES_256_XTS
 
FSCRYPT_MODE_AES_256_XTS


	)

167 
	#FS_ENCRYPTION_MODE_AES_256_GCM
 2

	)

168 
	#FS_ENCRYPTION_MODE_AES_256_CBC
 3

	)

169 
	#FS_ENCRYPTION_MODE_AES_256_CTS
 
FSCRYPT_MODE_AES_256_CTS


	)

170 
	#FS_ENCRYPTION_MODE_AES_128_CBC
 
FSCRYPT_MODE_AES_128_CBC


	)

171 
	#FS_ENCRYPTION_MODE_AES_128_CTS
 
FSCRYPT_MODE_AES_128_CTS


	)

172 
	#FS_ENCRYPTION_MODE_SPECK128_256_XTS
 7

	)

173 
	#FS_ENCRYPTION_MODE_SPECK128_256_CTS
 8

	)

174 
	#FS_ENCRYPTION_MODE_ADIANTUM
 
FSCRYPT_MODE_ADIANTUM


	)

175 
	#FS_KEY_DESC_PREFIX
 
FSCRYPT_KEY_DESC_PREFIX


	)

176 
	#FS_KEY_DESC_PREFIX_SIZE
 
FSCRYPT_KEY_DESC_PREFIX_SIZE


	)

177 
	#FS_MAX_KEY_SIZE
 
FSCRYPT_MAX_KEY_SIZE


	)

	@/usr/include/linux/ioctl.h

2 #i‚de‡
_LINUX_IOCTL_H


3 
	#_LINUX_IOCTL_H


	)

5 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/mount.h

1 #i‚de‡
_LINUX_MOUNT_H


2 
	#_LINUX_MOUNT_H


	)

11 
	#MS_RDONLY
 1

	)

12 
	#MS_NOSUID
 2

	)

13 
	#MS_NODEV
 4

	)

14 
	#MS_NOEXEC
 8

	)

15 
	#MS_SYNCHRONOUS
 16

	)

16 
	#MS_REMOUNT
 32

	)

17 
	#MS_MANDLOCK
 64

	)

18 
	#MS_DIRSYNC
 128

	)

19 
	#MS_NOATIME
 1024

	)

20 
	#MS_NODIRATIME
 2048

	)

21 
	#MS_BIND
 4096

	)

22 
	#MS_MOVE
 8192

	)

23 
	#MS_REC
 16384

	)

24 
	#MS_VERBOSE
 32768

	)

26 
	#MS_SILENT
 32768

	)

27 
	#MS_POSIXACL
 (1<<16Ë

	)

28 
	#MS_UNBINDABLE
 (1<<17Ë

	)

29 
	#MS_PRIVATE
 (1<<18Ë

	)

30 
	#MS_SLAVE
 (1<<19Ë

	)

31 
	#MS_SHARED
 (1<<20Ë

	)

32 
	#MS_RELATIME
 (1<<21Ë

	)

33 
	#MS_KERNMOUNT
 (1<<22Ë

	)

34 
	#MS_I_VERSION
 (1<<23Ë

	)

35 
	#MS_STRICTATIME
 (1<<24Ë

	)

36 
	#MS_LAZYTIME
 (1<<25Ë

	)

39 
	#MS_SUBMOUNT
 (1<<26)

	)

40 
	#MS_NOREMOTELOCK
 (1<<27)

	)

41 
	#MS_NOSEC
 (1<<28)

	)

42 
	#MS_BORN
 (1<<29)

	)

43 
	#MS_ACTIVE
 (1<<30)

	)

44 
	#MS_NOUSER
 (1<<31)

	)

49 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
|\

50 
MS_LAZYTIME
)

	)

55 
	#MS_MGC_VAL
 0xC0ED0000

	)

56 
	#MS_MGC_MSK
 0xffff0000

	)

61 
	#OPEN_TREE_CLONE
 1

	)

62 
	#OPEN_TREE_CLOEXEC
 
O_CLOEXEC


	)

67 
	#MOVE_MOUNT_F_SYMLINKS
 0x00000001

	)

68 
	#MOVE_MOUNT_F_AUTOMOUNTS
 0x00000002

	)

69 
	#MOVE_MOUNT_F_EMPTY_PATH
 0x00000004

	)

70 
	#MOVE_MOUNT_T_SYMLINKS
 0x00000010

	)

71 
	#MOVE_MOUNT_T_AUTOMOUNTS
 0x00000020

	)

72 
	#MOVE_MOUNT_T_EMPTY_PATH
 0x00000040

	)

73 
	#MOVE_MOUNT__MASK
 0x00000077

	)

78 
	#FSOPEN_CLOEXEC
 0x00000001

	)

83 
	#FSPICK_CLOEXEC
 0x00000001

	)

84 
	#FSPICK_SYMLINK_NOFOLLOW
 0x00000002

	)

85 
	#FSPICK_NO_AUTOMOUNT
 0x00000004

	)

86 
	#FSPICK_EMPTY_PATH
 0x00000008

	)

91 
	efsc⁄fig_comm™d
 {

92 
	mFSCONFIG_SET_FLAG
 = 0,

93 
	mFSCONFIG_SET_STRING
 = 1,

94 
	mFSCONFIG_SET_BINARY
 = 2,

95 
	mFSCONFIG_SET_PATH
 = 3,

96 
	mFSCONFIG_SET_PATH_EMPTY
 = 4,

97 
	mFSCONFIG_SET_FD
 = 5,

98 
	mFSCONFIG_CMD_CREATE
 = 6,

99 
	mFSCONFIG_CMD_RECONFIGURE
 = 7,

105 
	#FSMOUNT_CLOEXEC
 0x00000001

	)

110 
	#MOUNT_ATTR_RDONLY
 0x00000001

	)

111 
	#MOUNT_ATTR_NOSUID
 0x00000002

	)

112 
	#MOUNT_ATTR_NODEV
 0x00000004

	)

113 
	#MOUNT_ATTR_NOEXEC
 0x00000008

	)

114 
	#MOUNT_ATTR__ATIME
 0x00000070

	)

115 
	#MOUNT_ATTR_RELATIME
 0x00000000

	)

116 
	#MOUNT_ATTR_NOATIME
 0x00000010

	)

117 
	#MOUNT_ATTR_STRICTATIME
 0x00000020

	)

118 
	#MOUNT_ATTR_NODIRATIME
 0x00000080

	)

	@/usr/include/linux/sysinfo.h

2 #i‚de‡
_LINUX_SYSINFO_H


3 
	#_LINUX_SYSINFO_H


	)

5 
	~<löux/ty≥s.h
>

7 
	#SI_LOAD_SHIFT
 16

	)

8 
	ssysöfo
 {

9 
__kî√l_l⁄g_t
 
	mu±ime
;

10 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

11 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

12 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

13 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

14 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

15 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

16 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

17 
__u16
 
	m¥ocs
;

18 
__u16
 
	m∑d
;

19 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

20 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

21 
__u32
 
	mmem_unô
;

22 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/linux/types.h

2 #i‚de‡
_LINUX_TYPES_H


3 
	#_LINUX_TYPES_H


	)

5 
	~<asm/ty≥s.h
>

7 #i‚de‡
__ASSEMBLY__


9 
	~<löux/posix_ty≥s.h
>

17 #ifde‡
__CHECKER__


18 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

20 
	#__bôwi£__


	)

22 
	#__bôwi£
 
__bôwi£__


	)

24 
__u16
 
	t__bôwi£
 
	t__À16
;

25 
__u16
 
	t__bôwi£
 
	t__be16
;

26 
__u32
 
	t__bôwi£
 
	t__À32
;

27 
__u32
 
	t__bôwi£
 
	t__be32
;

28 
__u64
 
	t__bôwi£
 
	t__À64
;

29 
__u64
 
	t__bôwi£
 
	t__be64
;

31 
__u16
 
	t__bôwi£
 
	t__sum16
;

32 
__u32
 
	t__bôwi£
 
	t__wsum
;

43 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

44 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

45 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	t__bôwi£
 
	t__pﬁl_t
;

	@/usr/include/linux/posix_types.h

2 #i‚de‡
_LINUX_POSIX_TYPES_H


3 
	#_LINUX_POSIX_TYPES_H


	)

5 
	~<löux/°ddef.h
>

22 #unde‡
__FD_SETSIZE


23 
	#__FD_SETSIZE
 1024

	)

26 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

27 } 
	t__kî√l_fd_£t
;

30 (*
	t__kî√l_sigh™dÀr_t
)();

33 
	t__kî√l_key_t
;

34 
	t__kî√l_mqd_t
;

36 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/stddef.h

4 #i‚de‡
__Æways_ölöe


5 
	#__Æways_ölöe
 
__ölöe__


	)

	@
1
.
1
/usr/include
13
332
driver1.c
driver1.mod.c
/usr/include/linux/fs.h
/usr/include/linux/kernel.h
/usr/include/linux/module.h
/usr/include/linux/fscrypt.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/mount.h
/usr/include/linux/sysinfo.h
/usr/include/linux/types.h
/usr/include/linux/posix_types.h
/usr/include/linux/stddef.h
